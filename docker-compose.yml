services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./.docker/mysql/data:/var/lib/mysql
      - ./.docker/mysql/my.cnf:/etc/mysql/mysql.conf.d/custom.cnf
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel8-admin
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    ports:
      - "3306:3306"
    networks:
      - local_network

  mongo:
    image: mongo:latest
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    volumes:
      - ./.docker/mongo/data:/data/db
    ports:
      - "27017:27017"
    networks:
      - local_network

  app:
    build:
      context: ./.docker/php  # Dockerfile의 실제 경로를 명확히 지정
      dockerfile: Dockerfile
    container_name: laravel8-admin
    volumes:
      - ./:/var/www/html  # 로컬 프로젝트 디렉토리와 컨테이너의 /var/www/html을 마운트
    networks:
      - local_network

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./:/var/www/html  # 동일하게 로컬 프로젝트 디렉토리와 Nginx에서 마운트
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "9090:80"
    networks:
      - local_network
    depends_on:
      - app

networks:
  local_network:
    driver: bridge
